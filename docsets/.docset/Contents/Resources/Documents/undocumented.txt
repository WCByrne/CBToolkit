CBProgressView.swift
	override public init(frame: CGRect)
	required public init?(coder aDecoder: NSCoder)
	override public func awakeFromNib()
	public override func willMoveToSuperview(newSuperview: UIView?)
	override public func layoutSubviews()
	override public func tintColorDidChange()
	override public init(frame: CGRect)
	required public init?(coder aDecoder: NSCoder)
	override public func awakeFromNib()
	public override func willMoveToSuperview(newSuperview: UIView?)
	override public func layoutSubviews()
	override public func tintColorDidChange()
CBViews.swift
	override public func awakeFromNib()
	public override func layoutSubviews()
	override public func drawRect(rect: CGRect)
	override public func drawRect(rect: CGRect)
CBTextView.swift
	override public var text: String!
	required public init?(coder aDecoder: NSCoder)
	override public func awakeFromNib()
	override public func willMoveToSuperview(newSuperview: UIView?)
	override public func didMoveToSuperview()
	public func textDidChange()
CBButton.swift
	override public var highlighted: Bool
	override public var selected: Bool
	public override func layoutSubviews()
	public override func tintColorDidChange()
	public override func touchesEnded(touches: Set<UITouch>, withEvent event: UIEvent?)
	public func popAnimation()
	override public var highlighted: Bool
	override public var selected: Bool
	public override func layoutSubviews()
	public func popAnimation()
CBExtensions.swift
	public var degreesToRadians : CGFloat
	public static func random(low: Int, high: Int) -> Int
	public func setPathAnimated(path: CGPath)
	public enum CBImageContentMode: Int
	public func crop(frame: CGRect) -> UIImage
	public func thumbnail(size: Int) ->UIImage
	public func resize(bounds: CGSize) -> UIImage
	public func resize(bounds: CGSize,  contentMode: CBImageContentMode!) -> UIImage
	public func fixOrientation() -> UIImage
	public func roundCorners(radius: Int) -> UIImage
CBPhotoFetcher.swift
	public func cancelFetchForUrl(url: String)
CBSliderCollectionViewLayout.swift
	public override init()
	required public init?(coder aDecoder: NSCoder)
	override public func collectionViewContentSize() -> CGSize
	override public func shouldInvalidateLayoutForBoundsChange(newBounds: CGRect) -> Bool
	override public func prepareLayout()
	override public func layoutAttributesForElementsInRect(rect: CGRect) -> [UICollectionViewLayoutAttributes]?
	public override func prepareForAnimatedBoundsChange(oldBounds: CGRect)
	override public func finalizeAnimatedBoundsChange()
	override public func layoutAttributesForItemAtIndexPath(indexPath: NSIndexPath) -> UICollectionViewLayoutAttributes?
CBDate.swift
	case TodayOnly
	case SurroundingDays
	case FutureWeek
	case PastWeek
	case SurroundingWeeks
CBCollectionViewLayout.swift
	optional func collectionView (collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout,
	optional func collectionView (collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout,
	optional func collectionView (collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout,
	optional func collectionView (collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout,
	optional func collectionView (collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout,
	optional func collectionview(collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout,
	optional func collectionView(collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout,
	optional func collectionView(collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout,
	@objc public protocol CBCollectionViewDataSource: UICollectionViewDataSource
	public enum CBCollectionViewLayoutItemRenderDirection : NSInteger
	public struct CBCollectionViewLayoutElementKind
	override public init()
	required public init?(coder aDecoder: NSCoder)
	public func gestureRecognizerShouldBegin(gestureRecognizer: UIGestureRecognizer) -> Bool
	public func gestureRecognizer(gestureRecognizer: UIGestureRecognizer, shouldRecognizeSimultaneouslyWithGestureRecognizer otherGestureRecognizer: UIGestureRecognizer) -> Bool
	override public func prepareLayout()
	override public func collectionViewContentSize() -> CGSize
	override public func layoutAttributesForItemAtIndexPath(indexPath: NSIndexPath) -> UICollectionViewLayoutAttributes?
	override public func layoutAttributesForSupplementaryViewOfKind(elementKind: String, atIndexPath indexPath: NSIndexPath) -> UICollectionViewLayoutAttributes
	override public func layoutAttributesForElementsInRect (rect : CGRect) -> [UICollectionViewLayoutAttributes]
	override public func shouldInvalidateLayoutForBoundsChange (newBounds : CGRect) -> Bool
CBImageEditor.swift
	public protocol CBImageEditorDelegate
	public var delegate: CBImageEditorDelegate!
	public var cropRatio: CGSize! = CGSize(width: 1, height: 1)
	public var circleCrop: Bool = false
	public var horizontalRatio : CGSize! = CGSizeMake(3, 2)
	public var verticalRatio : CGSize! = CGSizeMake(2, 3)
	public var finalSize: CGSize?
	public  var headerView: UIView!
	public var titleLabel: UILabel!
	public var saveButton: CBButton!
	public var cancelButton: CBButton!
	public var squareButton: CBButton!
	public var horizontalButton: CBButton!
	public var verticalButton: CBButton!
	public var filterCV : UICollectionView!
	public init(image: UIImage!, style: UIBlurEffectStyle, delegate: CBImageEditorDelegate)
	required public init?(coder aDecoder: NSCoder)
	public func enableAspectRatios(enable: Bool, animated: Bool)
	public func enableFilters(enable: Bool, animated: Bool)
	override public func willAnimateRotationToInterfaceOrientation(toInterfaceOrientation: UIInterfaceOrientation, duration: NSTimeInterval)
	override public func viewDidLayoutSubviews()
	public func finish()
	public func setSquareCrop()
	public func setHorizontalCrop()
	public func setVerticalCrop()
	public func viewForZoomingInScrollView(scrollView: UIScrollView) -> UIView?
	public func numberOfSectionsInCollectionView(collectionView: UICollectionView) -> Int
	public func collectionView(collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int
	public func collectionView(collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAtIndexPath indexPath: NSIndexPath) -> CGSize
	public func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell
	public func collectionView(collectionView: UICollectionView, didSelectItemAtIndexPath indexPath: NSIndexPath)
CBTextField.swift
	public override func layoutSubviews()
	public override func tintColorDidChange()
	override public var placeholder: String?
	override public func awakeFromNib()
	override public func caretRectForPosition(position: UITextPosition) -> CGRect
	override public func editingRectForBounds(bounds: CGRect) -> CGRect
	override public func textRectForBounds(bounds: CGRect) -> CGRect
	override public func drawRect(rect: CGRect)
CBImageView.swift
	@IBInspectable public var cornerRadius: CGFloat = 0
	@IBInspectable public var circleCrop : Bool = false
	override public func awakeFromNib()
	public override func layoutSubviews()
	override public var image: UIImage?
	public func updateImage(newImage: UIImage?)
CBIconButton.swift
	case None
	case Hamburger
	case Close
	case Add
	case AngleLeft
	case AngleRight
	case ArrowLeft
	case ArrowRight
	case Checkmark
	override public var bounds : CGRect
	override public var highlighted : Bool
	required public init?(coder aDecoder: NSCoder)
	public override func awakeFromNib()
	override public func tintColorDidChange()
